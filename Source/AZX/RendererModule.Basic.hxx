/*
Copyright (c) 2023 Americus Maximus

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/

#pragma once

#include "Basic.hxx"
#include "Renderer.Basic.hxx"
#include "Native.Basic.hxx"

#define RENDERER_MODULE_FAILURE FALSE
#define RENDERER_MODULE_SUCCESS TRUE

#define RENDERER_MODULE_DX6_ACCELERATION_AVAILABLE 80
#define RENDERER_MODULE_DX7_ACCELERATION_AVAILABLE 85

#define RENDERER_MODULE_INITIALIZE_DEVICE_SUCCESS 1400

#define RENDERER_MODULE_VERSION_DX4 4
#define RENDERER_MODULE_VERSION_DX5 5
#define RENDERER_MODULE_VERSION_DX6 6

#define RENDERER_MODULE_VERSION_104 104
#define RENDERER_MODULE_VERSION_105 105
#define RENDERER_MODULE_VERSION_106 106
#define RENDERER_MODULE_VERSION_107 107

#define RENDERER_MODULE_SIGNATURE_D3D5 0x44334435 /* D3D5 */
#define RENDERER_MODULE_SIGNATURE_D3D6 0x44334436 /* D3D6 */
#define RENDERER_MODULE_SIGNATURE_D3D7 0x44334437 /* D3D7 */
#define RENDERER_MODULE_SIGNATURE_3DFX 0x33444658 /* 3DFX */
#define RENDERER_MODULE_SIGNATURE_3DF2 0x33444632 /* 3DF2 */
#define RENDERER_MODULE_SIGNATURE_IRTS 0x49525453 /* IRTS */

#define RENDERER_MODULE_MESSAGE_SEVERITY_ERROR 0
#define RENDERER_MODULE_MESSAGE_SEVERITY_WARNING 1
#define RENDERER_MODULE_MESSAGE_SEVERITY_MESSAGE 2

#define MAX_RENDERER_MODULE_DEVICE_NAME_LENGTH 32

#define RENDERER_MODULE_TEXTURE_LOCATION_SYSTEM_MEMORY 0
#define RENDERER_MODULE_TEXTURE_LOCATION_LOCAL_VIDEO_MEMORY 1
#define RENDERER_MODULE_TEXTURE_LOCATION_NON_LOCAL_VIDEO_MEMORY 2

#define RENDERER_MODULE_SELECT_STATE_MASK 0x0000FFFF
#define RENDERER_MODULE_SELECT_STATE_STAGE_MASK 0xFFFF0000

#define RENDERER_MODULE_STATE_SELECT_TEXTURE_STAGE_0 0x00000
#define RENDERER_MODULE_STATE_SELECT_TEXTURE_STAGE_1 0x10000
#define RENDERER_MODULE_STATE_SELECT_TEXTURE_STAGE_2 0x20000
#define RENDERER_MODULE_STATE_SELECT_TEXTURE_STAGE_3 0x30000
#define RENDERER_MODULE_STATE_SELECT_TEXTURE_STAGE_4 0x40000
#define RENDERER_MODULE_STATE_SELECT_TEXTURE_STAGE_5 0x50000
#define RENDERER_MODULE_STATE_SELECT_TEXTURE_STAGE_6 0x60000
#define RENDERER_MODULE_STATE_SELECT_TEXTURE_STAGE_7 0x70000

#define RENDERER_TEXTURE_STAGE_0 0
#define RENDERER_TEXTURE_STAGE_1 1
#define RENDERER_TEXTURE_STAGE_2 2
#define RENDERER_TEXTURE_STAGE_3 3
#define RENDERER_TEXTURE_STAGE_4 4
#define RENDERER_TEXTURE_STAGE_5 5
#define RENDERER_TEXTURE_STAGE_6 6
#define RENDERER_TEXTURE_STAGE_7 7

//#define RENDERER_TRANSFORM_STATE_WORLD_0 0
//#define RENDERER_TRANSFORM_STATE_WORLD_1 1
//#define RENDERER_TRANSFORM_STATE_WORLD_2 2
//#define RENDERER_TRANSFORM_STATE_WORLD_3 3
//
//#define RENDERER_TRANSFORM_STATE_MULTIPLY_WORLD_0 0
//#define RENDERER_TRANSFORM_STATE_MULTIPLY_WORLD_1 1
//#define RENDERER_TRANSFORM_STATE_MULTIPLY_WORLD_2 2
//#define RENDERER_TRANSFORM_STATE_MULTIPLY_WORLD_3 3

#define RENDERER_MODULE_DEVICE_TYPE_INVALID (-1)
#define RENDERER_MODULE_DEVICE_TYPE_RAMP 0
#define RENDERER_MODULE_DEVICE_TYPE_RGB 1
#define RENDERER_MODULE_DEVICE_TYPE_MMX 2
#define RENDERER_MODULE_DEVICE_TYPE_ACCELERATED 3

#define RENDERER_MODULE_ANTIALIASING_NONE 0
#define RENDERER_MODULE_ANTIALIASING_SORT_DEPENDENT 1
#define RENDERER_MODULE_ANTIALIASING_SORT_INDEPENDENT 2

#define RENDERER_MODULE_BLEND_SOURCE_ALPHA_INVERSE_SOURCE_ALPHA 0
#define RENDERER_MODULE_BLEND_SOURCE_ALPHA_ONE 1
#define RENDERER_MODULE_BLEND_ZERO_INVERSE_SOURCE_ALPHA 2
#define RENDERER_MODULE_BLEND_DESTINATION_COLOR_ZERO 3

#define RENDERER_MODULE_BLEND_ONE 0
#define RENDERER_MODULE_BLEND_ZERO 1
#define RENDERER_MODULE_BLEND_SOURCE_ALPHA 2
#define RENDERER_MODULE_BLEND_INVERSE_SOURCE_ALPHA 3
#define RENDERER_MODULE_BLEND_DESTINATION_ALPHA 4
#define RENDERER_MODULE_BLEND_INVERSE_DESTINATION_ALPHA 5
#define RENDERER_MODULE_BLEND_SOURCE_COLOR 6
#define RENDERER_MODULE_BLEND_DESTINATION_COLOR 7
#define RENDERER_MODULE_BLEND_INVERSE_SOURCE_COLOR 8
#define RENDERER_MODULE_BLEND_INVERSE_DESTINATION_COLOR 9

#define RENDERER_MODULE_TEXTURE_TEXTURE_COLOR 0
#define RENDERER_MODULE_TEXTURE_TEXTURE_DIFFUSE_COLOR 1
#define RENDERER_MODULE_TEXTURE_BLEND_TEXTURE_ALPHA_DIFFUSE 2
#define RENDERER_MODULE_TEXTURE_MODULATE_TEXTURE_DIFFUSE_COLOR 3
#define RENDERER_MODULE_TEXTURE_SELECT_TEXTURE_COLOR 4
#define RENDERER_MODULE_TEXTURE_SUMMARIZE_TEXTURE_DIFFUSE_COLOR 5

#define RENDERER_MODULE_TEXTURE_HINT_NONE 0
#define RENDERER_MODULE_TEXTURE_HINT_DYNAMIC 1
#define RENDERER_MODULE_TEXTURE_HINT_STATIC 2

#define RENDERER_MODULE_CULL_NONE 0
#define RENDERER_MODULE_CULL_COUNTER_CLOCK_WISE 1
#define RENDERER_MODULE_CULL_CLOCK_WISE 2

#define RENDERER_MODULE_DITHER_INACTIVE 0
#define RENDERER_MODULE_DITHER_ACTIVE 1

#define RENDERER_MODULE_DEPTH_DISABLE 0
#define RENDERER_MODULE_DEPTH_ENABLE 1
#define RENDERER_MODULE_DEPTH_W 2

#define RENDERER_MODULE_SHADE_FLAT 0
#define RENDERER_MODULE_SHADE_GOURAUD 1

#define RENDERER_MODULE_TEXTURE_FILTER_POINT 0
#define RENDERER_MODULE_TEXTURE_FILTER_LENEAR 1
#define RENDERER_MODULE_TEXTURE_FILTER_ANISOTROPY 2

#define RENDERER_MODULE_ANTI_ALIAS_NONE 0
#define RENDERER_MODULE_ANTI_ALIAS_SORT_DEPENDENT 1
#define RENDERER_MODULE_ANTI_ALIAS_SORT_INDEPENDENT 2

#define RENDERER_MODULE_ALPHA_BLEND_NONE 0
#define RENDERER_MODULE_ALPHA_BLEND_UNKNOWN 1
#define RENDERER_MODULE_ALPHA_BLEND_ACTIVE 2

#define RENDERER_MODULE_TEXTURE_MIP_FILTER_NONE 0
#define RENDERER_MODULE_TEXTURE_MIP_FILTER_POINT 1
#define RENDERER_MODULE_TEXTURE_MIP_FILTER_POINT_ADVANCED 2
#define RENDERER_MODULE_TEXTURE_MIP_FILTER_LINEAR 3

#define RENDERER_MODULE_TEXTURE_ADDRESS_CLAMP 0
#define RENDERER_MODULE_TEXTURE_ADDRESS_WRAP 1
#define RENDERER_MODULE_TEXTURE_ADDRESS_MIRROR 2

#define RENDERER_MODULE_FOG_COLOR_MASK 0X00FFFFFF

#define RENDERER_MODULE_STATE_FLAT_FANS_0 0 /* TODO */
#define RENDERER_MODULE_STATE_FLAT_FANS_1 1 /* TODO */

#define RENDERER_MODULE_FOG_INACTIVE 0
#define RENDERER_MODULE_FOG_ACTIVE 1
#define RENDERER_MODULE_FOG_ACTIVE_LINEAR 2
#define RENDERER_MODULE_FOG_ACTIVE_EXP 4
#define RENDERER_MODULE_FOG_ACTIVE_EXP2 8

#define RENDERER_MODULE_BACK_BUFFER_TYPE_0 0 /* TODO */
#define RENDERER_MODULE_BACK_BUFFER_TYPE_1 1  /* TODO */

#define RENDERER_MODULE_ALPHA_TEST_0 0
#define RENDERER_MODULE_ALPHA_TEST_1 1
#define RENDERER_MODULE_ALPHA_TEST_2 2
#define RENDERER_MODULE_ALPHA_TEST_4 4
#define RENDERER_MODULE_ALPHA_TEST_8 8
#define RENDERER_MODULE_ALPHA_TEST_16 16

#define RENDERER_MODULE_DEPTH_FUNCTION_NEVER 0
#define RENDERER_MODULE_DEPTH_FUNCTION_LESS 1
#define RENDERER_MODULE_DEPTH_FUNCTION_EQUAL 2
#define RENDERER_MODULE_DEPTH_FUNCTION_LESS_EQUAL 3
#define RENDERER_MODULE_DEPTH_FUNCTION_GREATER 4
#define RENDERER_MODULE_DEPTH_FUNCTION_NOT_EQUAL 5
#define RENDERER_MODULE_DEPTH_FUNCTION_GREATER_EQUAL 6
#define RENDERER_MODULE_DEPTH_FUNCTION_ALWAYS 7

#define RENDERER_MODULE_TEXTURE_STAGE_BLEND_NORMAL 0
#define RENDERER_MODULE_TEXTURE_STAGE_BLEND_ADD 1
#define RENDERER_MODULE_TEXTURE_STAGE_BLEND_MODULATE 3
#define RENDERER_MODULE_TEXTURE_STAGE_BLEND_SUBTRACT 4
#define RENDERER_MODULE_TEXTURE_STAGE_BLEND_ARG2 5
#define RENDERER_MODULE_TEXTURE_STAGE_BLEND_MODULATE_2X 6
#define RENDERER_MODULE_TEXTURE_STAGE_BLEND_MODULATE_4X 7
#define RENDERER_MODULE_TEXTURE_STAGE_BLEND_ADD_BLEND_FACTOR_ALPHA 98
#define RENDERER_MODULE_TEXTURE_STAGE_BLEND_BLEND_FACTOR_ALPHA_ARG1 99

#define RENDERER_MODULE_VERTEX_TYPE_RTLVX 0
#define RENDERER_MODULE_VERTEX_TYPE_RTLVX2 1

#define RENDERER_MODULE_STENCIL_INACTIVE 0
#define RENDERER_MODULE_STENCIL_ACTIVE 1

#define RENDERER_MODULE_STENCIL_FUNCTION_NEVER 0
#define RENDERER_MODULE_STENCIL_FUNCTION_LESS 1
#define RENDERER_MODULE_STENCIL_FUNCTION_EQUAL 2
#define RENDERER_MODULE_STENCIL_FUNCTION_LESS_EQUAL 3
#define RENDERER_MODULE_STENCIL_FUNCTION_GREATER 4
#define RENDERER_MODULE_STENCIL_FUNCTION_NOT_EQUAL 5
#define RENDERER_MODULE_STENCIL_FUNCTION_GREATER_EQUAL 6
#define RENDERER_MODULE_STENCIL_FUNCTION_ALWAYS 7

#define RENDERER_MODULE_STENCIL_FAIL_KEEP 0
#define RENDERER_MODULE_STENCIL_FAIL_ZERO 1
#define RENDERER_MODULE_STENCIL_FAIL_REPLACE 2
#define RENDERER_MODULE_STENCIL_FAIL_INCREMENT_CLAMP 3
#define RENDERER_MODULE_STENCIL_FAIL_DECREMENT_CLAMP 4
#define RENDERER_MODULE_STENCIL_FAIL_INVERT 5
#define RENDERER_MODULE_STENCIL_FAIL_INCREMENT 7
#define RENDERER_MODULE_STENCIL_FAIL_DECREMENT 8

#define RENDERER_MODULE_STENCIL_DEPTH_FAIL_KEEP 0
#define RENDERER_MODULE_STENCIL_DEPTH_FAIL_ZERO 1
#define RENDERER_MODULE_STENCIL_DEPTH_FAIL_REPLACE 2
#define RENDERER_MODULE_STENCIL_DEPTH_FAIL_INCREMENT_CLAMP 3
#define RENDERER_MODULE_STENCIL_DEPTH_FAIL_DECREMENT_CLAMP 4
#define RENDERER_MODULE_STENCIL_DEPTH_FAIL_INVERT 5
#define RENDERER_MODULE_STENCIL_DEPTH_FAIL_INCREMENT 7
#define RENDERER_MODULE_STENCIL_DEPTH_FAIL_DECREMENT 8

#define RENDERER_MODULE_STENCIL_PASS_KEEP 0
#define RENDERER_MODULE_STENCIL_PASS_ZERO 1
#define RENDERER_MODULE_STENCIL_PASS_REPLACE 2
#define RENDERER_MODULE_STENCIL_PASS_INCREMENT_CLAMP 3
#define RENDERER_MODULE_STENCIL_PASS_DECREMENT_CLAMP 4
#define RENDERER_MODULE_STENCIL_PASS_INVERT 5
#define RENDERER_MODULE_STENCIL_PASS_INCREMENT 7
#define RENDERER_MODULE_STENCIL_PASS_DECREMENT 8

#define RENDERER_MODULE_ALPHA_BLEND_SOURCE_INVERSE_SOURCE 0
#define RENDERER_MODULE_ALPHA_BLEND_SOURCE_ONE 1
#define RENDERER_MODULE_ALPHA_BLEND_ZERO_INVERSE_SOURCE 2
#define RENDERER_MODULE_ALPHA_BLEND_DESTINATION_COLOR_ZERO 3

#define RENDERER_MODULE_STATE_FILL_SOLID 0
#define RENDERER_MODULE_STATE_FILL_WIRE 1

#define RENDERER_MODULE_STATE_NONE 0
#define RENDERER_MODULE_STATE_SELECT_TEXTURE 1
#define RENDERER_MODULE_STATE_SELECT_CULL_STATE 2
#define RENDERER_MODULE_STATE_SELECT_MATERIAL 3 /* BACKGROUND COLOR */
#define RENDERER_MODULE_STATE_SELECT_DEPTH_STATE 4
#define RENDERER_MODULE_STATE_SELECT_DITHER_STATE 5
#define RENDERER_MODULE_STATE_SELECT_SHADE_STATE 6
#define RENDERER_MODULE_STATE_SELECT_TEXTURE_FILTER_STATE 7
#define RENDERER_MODULE_STATE_SELECT_MIP_MAP_LOD_BIAS_STATE 8
#define RENDERER_MODULE_STATE_SELECT_ANTI_ALIAS_STATE 9
#define RENDERER_MODULE_STATE_SELECT_ALPHA_BLEND_STATE 10 /* TRANSPARENCY */
#define RENDERER_MODULE_STATE_SELECT_TEXTURE_MIP_FILTER_STATE 11
#define RENDERER_MODULE_STATE_SELECT_CHROMATIC_COLOR 12
#define RENDERER_MODULE_STATE_SELECT_TEXTURE_ADDRESS_STATE 13 /* TEXTURE CLAMP */
#define RENDERER_MODULE_STATE_SELECT_FOG_DENSITY 14
#define RENDERER_MODULE_STATE_SELECT_FOG_COLOR 15
#define RENDERER_MODULE_STATE_SELECT_LINE_WIDTH 16
#define RENDERER_MODULE_STATE_SELECT_FLAT_FANS_STATE 17
#define RENDERER_MODULE_STATE_SELECT_WINDOW_MODE_STATE 18
#define RENDERER_MODULE_STATE_SELECT_LAMBDAS 19
#define RENDERER_MODULE_STATE_20 20
#define RENDERER_MODULE_STATE_SELECT_FOG_STATE 21
#define RENDERER_MODULE_STATE_SELECT_FOG_START 22
#define RENDERER_MODULE_STATE_SELECT_FOG_END 23
#define RENDERER_MODULE_STATE_SELECT_DEPTH_BIAS_STATE 24
#define RENDERER_MODULE_STATE_SELECT_WINDOW 25
#define RENDERER_MODULE_STATE_SELECT_LOG_LAMBDA 26
#define RENDERER_MODULE_STATE_SELECT_EXECUTE_LAMBDA 27
#define RENDERER_MODULE_STATE_SELECT_LOCK_WINDOW_LAMBDA 28
#define RENDERER_MODULE_STATE_29 29
#define RENDERER_MODULE_STATE_SELECT_LINE_VERTEX_SIZE 30
#define RENDERER_MODULE_STATE_SELECT_VERSION 31
#define RENDERER_MODULE_STATE_SELECT_MEMORY_ALLOCATE_LAMBDA 32
#define RENDERER_MODULE_STATE_SELECT_MEMORY_RELEASE_LAMBDA 33
#define RENDERER_MODULE_STATE_34 34
#define RENDERER_MODULE_STATE_RESTORE_RENDERER_SURFACES 35
#define RENDERER_MODULE_STATE_SELECT_ALPHA_TEST_STATE 36
#define RENDERER_MODULE_STATE_37 37
#define RENDERER_MODULE_STATE_ACQUIRE_RENDERER_INSTANCE 38
#define RENDERER_MODULE_STATE_SELECT_SELECT_STATE_LAMBDA 39
#define RENDERER_MODULE_STATE_SELCT_DEPTH_FUNCTION 40
#define RENDERER_MODULE_STATE_SELECT_TEXTURE_STAGE_BLEND_STATE 41
#define RENDERER_MODULE_STATE_SELECT_VERTEX_TYPE 42
#define RENDERER_MODULE_STATE_SELECT_BACK_BUFFER_TYPE 43
#define RENDERER_MODULE_STATE_SELECT_PALETTE 44
#define RENDERER_MODULE_STATE_45 45
#define RENDERER_MODULE_STATE_SELECT_GAMMA_CONTROL_STATE 46
#define RENDERER_MODULE_STATE_SELECT_STENCIL_STATE 47
#define RENDERER_MODULE_STATE_SELECT_STENCIL_FUNCTION 48
#define RENDERER_MODULE_STATE_49 49
#define RENDERER_MODULE_STATE_50 50
#define RENDERER_MODULE_STATE_51 51
#define RENDERER_MODULE_STATE_SELECT_STENCIL_FAIL_STATE 52
#define RENDERER_MODULE_STATE_SELECT_STENCIL_DEPTH_FAIL_STATE 53
#define RENDERER_MODULE_STATE_SELECT_STENCIL_PASS_STATE 54
#define RENDERER_MODULE_STATE_55 55
#define RENDERER_MODULE_STATE_SELECT_ALPHA_STATE 56
#define RENDERER_MODULE_STATE_SELECT_DEPTH_BUFFER_WRITE_STATE 57
#define RENDERER_MODULE_STATE_SELECT_DISPLAY_STATE 58
#define RENDERER_MODULE_STATE_59 59
#define RENDERER_MODULE_STATE_60 60
#define RENDERER_MODULE_STATE_SELECT_GAMMA_CONTROL_STATE_ALTERNATIVE 101
#define RENDERER_MODULE_STATE_SELECT_DEPTH_BIAS_STATE_ALTERNATIVE 102
#define RENDERER_MODULE_STATE_103 103
#define RENDERER_MODULE_STATE_SELECT_BLEND_STATE 104
#define RENDERER_MODULE_STATE_SELECT_FOG_ALPHAS 105
#define RENDERER_MODULE_STATE_SELECT_DEPTH_BUFFER_WRITE_STATE_ALTERNATIVE 106
#define RENDERER_MODULE_STATE_107 107
#define RENDERER_MODULE_STATE_108 108
#define RENDERER_MODULE_STATE_MAX_PENDING 109
#define RENDERER_MODULE_STATE_110 110
#define RENDERER_MODULE_STATE_SELECT_DEVICE_TYPE 400
#define RENDERER_MODULE_STATE_401 401
#define RENDERER_MODULE_STATE_402 402
#define RENDERER_MODULE_STATE_ACQUIRE_DEVICE_CAPABILITIES 403
#define RENDERER_MODULE_STATE_SELECT_SOURCE_BLEND_STATE 404
#define RENDERER_MODULE_STATE_SELECT_DESTINATION_BLEND_STATE 405
#define RENDERER_MODULE_STATE_SELECT_TEXTURE_STAGE_STATE 406
#define RENDERER_MODULE_STATE_SELECT_TEXTURE_HINT_STATE 407
#define RENDERER_MODULE_STATE_SELECT_WINDOW_MODE_ACTIVE_STATE 408
#define RENDERER_MODULE_STATE_SELECT_FILL_MODE_STATE 409
#define RENDERER_MODULE_STATE_SELECT_TEXTURE_FACTOR 410
#define RENDERER_MODULE_STATE_ACQUIRE_RENDERER_OBJECTS 411
//#define RENDERER_MODULE_STATE_0x19c 0x19c
//#define RENDERER_MODULE_STATE_0x19d 0x19d
//#define RENDERER_MODULE_STATE_SELECT_BUMP_MAPPING_MATRIX 0x19f
//#define RENDERER_MODULE_STATE_SELECT_BUMP_MAPPING_LUMINANCE_SCALE 0x1a0
//#define RENDERER_MODULE_STATE_SELECT_BUMP_MAPPING_LUMINANCE_OFFSET 0x1a1
//#define RENDERER_MODULE_STATE_0x1a2 0x1a2
//#define RENDERER_MODULE_STATE_0x1a3 0x1a3
//#define RENDERER_MODULE_STATE_0x1a4 0x1a4
//#define RENDERER_MODULE_STATE_SELECT_TRANSFORM_WORLD 0x1a5
//#define RENDERER_MODULE_STATE_SELECT_TRANSFORM_VIEW 0x1a6
//#define RENDERER_MODULE_STATE_SELECT_TRANSFORM_PROJECTION 0x1a7
//#define RENDERER_MODULE_STATE_SELECT_TRANSFORM_MULTIPLY_WORLD 0x1a8
//#define RENDERER_MODULE_STATE_SELECT_TRANSFORM_MULTIPLY_VIEW 0x1a9
//#define RENDERER_MODULE_STATE_SELECT_TRANSFORM_MULTIPLY_PROJECTION 0x1aa
//#define RENDERER_MODULE_STATE_ACQUIRE_TRANSFORM_WORLD 0x1ab
//#define RENDERER_MODULE_STATE_ACQUIRE_TRANSFORM_VIEW 0x1ac
//#define RENDERER_MODULE_STATE_ACQUIRE_TRANSFORM_PROJECTION 0x1ad
//#define RENDERER_MODULE_STATE_SELECT_LIGHT 0x1ae
//#define RENDERER_MODULE_STATE_ACQUIRE_LIGHT 0x1af
//#define RENDERER_MODULE_STATE_SELECT_LIGHT_STATE 0x1b0
//#define RENDERER_MODULE_STATE_SELECT_MATERIAL 0x1b1
//#define RENDERER_MODULE_STATE_ACQUIRE_MATERIAL 0x1b2
//#define RENDERER_MODULE_STATE_RENDER_PACKET 0x1b3
//#define RENDERER_MODULE_STATE_0x1b4 0x1b4
//#define RENDERER_MODULE_STATE_SELECT_AMBIENT 0x1b5
//#define RENDERER_MODULE_STATE_SELECT_CLIPPING 0x1b6
//#define RENDERER_MODULE_STATE_SELECT_LIGHTING 0x1b7
//#define RENDERER_MODULE_STATE_0x1b8 0x1b8
//#define RENDERER_MODULE_STATE_0x1b9 0x1b9
//#define RENDERER_MODULE_STATE_0x1ba 0x1ba
//#define RENDERER_MODULE_STATE_RENDER_BUFFERED_PACKET 0x1bb
//#define RENDERER_MODULE_STATE_0x1bc 0x1bc
//#define RENDERER_MODULE_STATE_SELECT_CLIP_PLANE 0x1bd
//#define RENDERER_MODULE_STATE_0x1be 0x1be
//#define RENDERER_MODULE_STATE_SELECT_CLIP_STATE 0x1bf
//#define RENDERER_MODULE_STATE_SELECT_VERTEX_BLEND 0x1c0
//#define RENDERER_MODULE_STATE_0x1c1 0x1c1
//#define RENDERER_MODULE_STATE_0x1c2 0x1c2
//#define RENDERER_MODULE_STATE_0x1c3 0x1c3

#define RENDERER_MODULE_CAPS_NONE 0
#define RENDERER_MODULE_CAPS_LINE_WIDTH 0x1
#define RENDERER_MODULE_CAPS_TEXTURE_SQUARE 0x2
#define RENDERER_MODULE_CAPS_TEXTURE_WIDTH_POW2 0x4
#define RENDERER_MODULE_CAPS_TEXTURE_HEIGHT_POW2 0x8
#define RENDERER_MODULE_CAPS_SOFTWARE 0x10
#define RENDERER_MODULE_CAPS_WINDOWED 0x20
#define RENDERER_MODULE_CAPS_GLOBAL_CUT 0x40
#define RENDERER_MODULE_CAPS_TRILINEAR_PASS 0x80

#define RENDERER_MODULE_DEVICE_TYPE_ENVIRONMENT_PROPERTY_NAME "THRASH_D3DDEVICETYPE"
#define RENDERER_MODULE_DISPLAY_ENVIRONMENT_PROPERTY_NAME "THRASH_DISPLAY"
#define RENDERER_MODULE_AUTO_MIP_MAP_ENVIRONMENT_PROPERTY_NAME "THRASH_AUTOMIPMAP"
#define RENDERER_MODULE_WIRE_FRAME_DX6_ENVIRONMENT_PROPERTY_NAME "DX6_WIREFRAME"

#define RENDERER_MODULE_WINDOW_MESSAGE_INITIALIZE_DEVICE 0x464
#define RENDERER_MODULE_WINDOW_MESSAGE_INITIALIZE_SURFACES 0x465
#define RENDERER_MODULE_WINDOW_MESSAGE_RELEASE_DEVICE 0x468

typedef const u32(STDCALLAPI* RENDERERMODULEEXECUTECALLBACK)(const void*, const HWND hwnd, const u32 msg, const u32 wp, const u32 lp, HRESULT* result); // TODO

typedef const HWND(STDCALLAPI* RENDERERMODULEACQUIREWINDOWLAMBDA)(void);
typedef const u32(STDCALLAPI* RENDERERMODULERELEASEMEMORYLAMBDA)(const void*);
typedef const void(STDCALLAPI* RENDERERMODULEEXECUTELAMBDA)(const u32 message, const RENDERERMODULEEXECUTECALLBACK lambda);
typedef const void(STDCALLAPI* RENDERERMODULELOCKWINDOWLAMBDA)(const BOOL state);
typedef const void(STDCALLAPI* RENDERERMODULELOGLAMBDA)(const u32 severity, const char* message);
typedef const void(STDCALLAPI* RENDERERMODULESELECTINSTANCELAMBDA)(const void*);
typedef const void(STDCALLAPI* RENDERERMODULESELECTSTATELAMBDA)(const u32, void*);
typedef void* (STDCALLAPI* RENDERERMODULEALLOCATEMEMORYLAMBDA)(const u32 size);

namespace RendererModule
{
    struct RendererModuleObjectCollection
    {
        void* Instance;
        void* DirectX;
        void* Device;
        void* ViewPort;
    };

    struct RendererModuleWindowLock
    {
        void* Data;
        u32 Stride;
        s32 Format;
        u32 Width;
        u32 Height;

        // NOTE: This is an extra field added to match IDirectDrawSurface4::Unlock method.
        // I don't know how it worked originally, but but only IDirectDrawSurface4::Unlock accepts RECT as a parameter,
        // while the original renderers (DX6) passes the pointer to the data itself into Unlock.
        // This matches IDirectDrawSurface3::Unlock, but IDirectDrawSurface3 is never created anywhere,
        // so unless interface names were not changed from  the previous renderer by mistake, it shouldn't be feasible.
        // So, adding the new field here, to be able to unlock windowed surface.
        RECT Rect;
    };

    struct RendererModuleDeviceCapabilities
    {
        BOOL IsAccelerated;
        u32 DepthBits;
        u32 RenderBits;

        s32 Unk03; // TODO
        s32 Unk04; // TODO
        s32 Unk05; // TODO
        s32 Unk06; // TODO
        s32 Unk07; // TODO
        s32 Unk08; // TODO
        s32 Unk09; // TODO
        s32 Unk10; // TODO

        BOOL IsPerspectiveTextures;
        BOOL IsAlphaFlatBlending;
        BOOL IsAlphaProperBlending;
        BOOL IsAlphaTextures;
        BOOL IsModulateBlending;
        BOOL IsSourceAlphaBlending;

        s32 Unk17; // TODO

        BOOL IsColorBlending;
        BOOL IsSpecularBlending;
    };

    struct RendererModuleLambdaContainer
    {
        void* L1; // TODO
        RENDERERMODULEACQUIREWINDOWLAMBDA AcquireWindow;
        RENDERERMODULEEXECUTELAMBDA Execute;
        void* L4; // TODO
        RENDERERMODULESELECTINSTANCELAMBDA SelectInstance;
        RENDERERMODULELOCKWINDOWLAMBDA LockWindow;
        RENDERERMODULELOGLAMBDA Log;
        void* L8; // TODO
    };

    struct RendererModuleDescriptorDeviceCapabilities
    {
        u32 Width;
        u32 Height;
        u32 Bits;
        u32 Format;

        BOOL IsActive;

        u32 Unk03; // TODO
        u32 Unk04; // TODO
        u32 Unk05; // TODO
        u32 Unk06; // TODO
        u32 Unk07; // TODO
    };

    struct RendererModuleDescriptor
    {
        u32 Signature;
        s32 Unk1; // TODO
        u32 Version;
        u32 Caps;
        u32 MinimumTextureWidth;
        u32 MaximumTextureWidth;
        u32 MultipleTextureWidth;
        u32 MinimumTextureHeight;
        u32 MaximumTextureHeight;
        u32 MultipleTextureHeight;
        u32 ClipAlign;

        s32 Unk4; // TODO

        s32* TextureFormatStates; // TODO

        s32 Unk5; // TODO
        s32* Unk6; // TODO

        struct
        {
            u32 Count;
            RendererModuleDescriptorDeviceCapabilities* Capabilities;
        } Capabilities;

        u32 MaximumSimultaneousTextures;
        s32 Unk7; // TODO
        char Name[MAX_RENDERER_MODULE_DEVICE_NAME_LENGTH];
        u32 SubType;

        u32 MemorySize;
        u32 MemoryType;

        const char* Author;

        u32 DXV;
    };

    // TODO

    //typedef enum RENDRERER_BLEND_TYPE
    //{
    //    RENDRERER_BLEND_TYPE_ONE = 0,
    //    RENDRERER_BLEND_TYPE_ZERO = 1,
    //    // TODO
    //} RENDRERER_BLEND_TYPE;

    /*typedef enum RENDRERER_LIGHT_TYPE
    {
        RENDRERER_LIGHT_TYPE_NONE = 0,
        RENDRERER_LIGHT_TYPE_POINT = 1,
        RENDRERER_LIGHT_TYPE_SPOT = 2,
        RENDRERER_LIGHT_TYPE_DIRECTIONAL = 3,
        RENDRERER_LIGHT_TYPE_MAX = 0x7FFFFFFF
    } RENDRERER_LIGHT_TYPE;*/

    /*struct RendererLight
    {
        RENDRERER_LIGHT_TYPE Type;
        u32 Diffuse;
        u32 Specular;
        u32 Ambient;
        f32x3 Position;
        f32x3 Direction;
        f32 Range;
        f32 Falloff;
        f32 Attenuation0;
        f32 Attenuation1;
        f32 Attenuation2;
        f32 Theta;
        f32 Phi;
    };*/

    /*struct RendererMaterial
    {
        u32 Diffuse;
        u32 Ambient;
        u32 Specular;
        u32 Emissive;
        f32 Power;
    };*/

    //typedef enum RENDERER_PRIMITIVE_TYPE
    //{
    //    RENDERER_PRIMITIVE_TYPE_NONE = 0,
    //    RENDERER_PRIMITIVE_TYPE_POINTLIST = 1,
    //    RENDERER_PRIMITIVE_TYPE_LINELIST = 2,
    //    RENDERER_PRIMITIVE_TYPE_LINESTRIP = 3,
    //    RENDERER_PRIMITIVE_TYPE_TRIANGLELIST = 4,
    //    RENDERER_PRIMITIVE_TYPE_TRIANGLESTRIP = 5,
    //    RENDERER_PRIMITIVE_TYPE_TRIANGLEFAN = 6,
    //    RENDERER_PRIMITIVE_TYPE_MAX = 0x7FFFFFFF
    //} RENDERER_PRIMITIVE_TYPE;

    /*struct RendererPacket
    {
        RENDERER_PRIMITIVE_TYPE Type;
        u32 FVF;
        void* Vertexes;
        u32 VertexCount;
        u16* Indexes;
        u32 IndexCount;
    };*/

    //struct RendererBufferPacket
    //{
    //    RENDERER_PRIMITIVE_TYPE Type;
    //    void* Vertexes;
    //    s32 Unk01; // TODO
    //    s32 IndexCount;
    //    s32 Unk03; // TODO
    //    u32 VertexCount;
    //    u16* Indexes;
    //};

    //struct RendererUnknown
    //{
    //    s32 Unk01; // TODO
    //    s32 Unk02; // TODO
    //    s32 Unk03; // TODO
    //    s32 Unk04; // TODO
    //    s32 Unk05; // TODO
    //    s32 Unk06; // TODO
    //    s32 Unk07; // TODO
    //};

    /*struct RendererTextureStageBumpMappingMatrix
    {
        f32 M00, M01, M10, M11;
    };*/
}